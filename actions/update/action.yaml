name: Update Flux manifests
description: A GitHub Action for updating Flux manifests in bootstrap repositories
author: Stefan Prodan
branding:
  color: blue
  icon: command
inputs:
  registry:
    description: "Distribution Container Registry"
    default: "ghcr.io/controlplaneio-fluxcd"
    required: true
  variant:
    description: "Base image variant e.g. alpine or distroless"
    default: "alpine"
    required: true
  components:
    description: "Flux components comma separated list e.g. source-controller,kustomize-controller"
    default: "source-controller,kustomize-controller,helm-controller,notification-controller,image-reflector-controller,image-automation-controller"
    required: true
  path:
    description: "Path to the flux-system dir e.g. clusters/production/flux-system/"
    required: true
  image-pull-secret:
    description: "Name of the Kubernetes image pull secret for accessing the distribution registry"
    required: false
  distribution-url:
    description: "Distribution images info URL"
    default: "https://raw.githubusercontent.com/controlplaneio-fluxcd/distribution/main/images"
    required: false
runs:
  using: composite
  steps:
    - name: Check if the Flux CLI is installed
      shell: bash
      run: |
        if ! flux version --client > /dev/null 2>&1; then
          echo "The Flux CLI is not installed. Please install it first using this GitHub Action:"
          echo ""
          echo "  https://github.com/controlplaneio-fluxcd/distribution/tree/main/actions/setup"
          echo ""
          exit 1
        fi
    - name: "Update components manifests"
      shell: bash
      run: |
        registry=${{ inputs.registry }}
        if [[ "${{ inputs.registry }}" == "ghcr.io/controlplaneio-fluxcd" ]]; then
          registry=${{ inputs.registry }}/${{ inputs.variant }}
        fi
        cd ${{ inputs.path }}
        flux install \
        --components="${{ inputs.components }}" \
        --registry=${registry} \
        --image-pull-secret=${{ inputs.image-pull-secret }} \
        --export > gotk-components.yaml
    - name: "Update images digests"
      shell: bash
      run: |
        if [[ "${{ inputs.registry }}" != "ghcr.io/controlplaneio-fluxcd" ]]; then
          exit 0
        fi
        cd ${{ inputs.path }}
        version=$(flux -v | awk '{ print $3 }')
        images_url="${{ inputs.distribution-url }}/v${version}/enterprise-${{ inputs.variant }}.yaml"
        curl -fsSL -o enterprise-images.yaml ${images_url}
        yq '. *= load("enterprise-images.yaml")' kustomization.yaml > kustomization.yaml.tmp
        mv kustomization.yaml.tmp kustomization.yaml
        rm enterprise-images.yaml
