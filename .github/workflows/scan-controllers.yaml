name: workflow scan

on:
  workflow_call:
    inputs:
      registry:
        description: 'container registry address'
        required: true
        type: string
      severity:
        description: 'vulnerability severity'
        required: false
        type: string
        default: 'CRITICAL,HIGH,MEDIUM'
      check-scan-error:
        description: 'check for scan errors'
        required: false
        type: boolean
        default: true
    secrets:
      pull-token:
        description: 'GitHub Container Registry read-only token'
        required: true

jobs:
  trivy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.pull-token }}
      - name: Latest release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(gh release view --json tagName -q '.tagName')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      - name: Setup Flux
        uses: fluxcd/flux2/action@534684601ec8888beb0cc4f51117b59e97606c4d #v2.2.3
        with:
          version: ${{ steps.release.outputs.version }}
      - name: Export images
        id: images
        run: |
          REGISTRY="${{ inputs.registry }}" \
          VERSION="${{ steps.release.outputs.version }}" \
          .github/workflows/export-images.sh
      - name: Scan source-controller
        id: sc
        continue-on-error: true
        uses: aquasecurity/trivy-action@84384bd6e777ef152729993b8145ea352e9dd3ef # v0.17.0
        with:
          image-ref: ${{ steps.images.outputs.sc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: ${{ inputs.severity }}
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.pull-token }}
      - name: Scan kustomize-controller
        id: kc
        continue-on-error: true
        uses: aquasecurity/trivy-action@84384bd6e777ef152729993b8145ea352e9dd3ef # v0.17.0
        with:
          image-ref: ${{ steps.images.outputs.kc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: ${{ inputs.severity }}
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.pull-token }}
      - name: Scan helm-controller
        id: hc
        continue-on-error: true
        uses: aquasecurity/trivy-action@84384bd6e777ef152729993b8145ea352e9dd3ef # v0.17.0
        with:
          image-ref: ${{ steps.images.outputs.hc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: ${{ inputs.severity }}
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.pull-token }}
      - name: Scan notification-controller
        id: nc
        continue-on-error: true
        uses: aquasecurity/trivy-action@84384bd6e777ef152729993b8145ea352e9dd3ef # v0.17.0
        with:
          image-ref: ${{ steps.images.outputs.nc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: ${{ inputs.severity }}
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.pull-token }}
      - name: Scan image-reflector-controller
        id: irc
        continue-on-error: true
        uses: aquasecurity/trivy-action@84384bd6e777ef152729993b8145ea352e9dd3ef # v0.17.0
        with:
          image-ref: ${{ steps.images.outputs.irc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: ${{ inputs.severity }}
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.pull-token }}
      - name: Scan image-automation-controller
        id: iac
        continue-on-error: true
        uses: aquasecurity/trivy-action@84384bd6e777ef152729993b8145ea352e9dd3ef # v0.17.0
        with:
          image-ref: ${{ steps.images.outputs.iac }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: ${{ inputs.severity }}
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.pull-token }}
      - name: Scan result
        run: |
          echo "source-controller: ${{ steps.sc.outcome }}"
          echo "image: ${{ steps.images.outputs.sc }}"
          echo "kustomize-controller: ${{ steps.kc.outcome }}"
          echo "image: ${{ steps.images.outputs.kc }}"
          echo "helm-controller: ${{ steps.hc.outcome }}"
          echo "image: ${{ steps.images.outputs.hc }}"
          echo "notification-controller: ${{ steps.nc.outcome }}"
          echo "image: ${{ steps.images.outputs.nc }}"
          echo "image-reflector-controller: ${{ steps.irc.outcome }}"
          echo "image: ${{ steps.images.outputs.irc }}"
          echo "image-automation-controller: ${{ steps.iac.outcome }}"
          echo "image: ${{ steps.images.outputs.iac }}"
      - name: Check result
        shell: bash
        if : steps.sc.outcome == 'failure' || steps.kc.outcome == 'failure' || steps.hc.outcome == 'failure' || steps.nc.outcome == 'failure' || steps.irc.outcome == 'failure' || steps.iac.outcome == 'failure'
        run: |
          echo "One or more controllers have vulnerabilities"
          if [ "${{ inputs.check-scan-error }}" = "true" ]; then
            exit 1
          fi
