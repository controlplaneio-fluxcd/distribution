name: scan-controllers

on:
  workflow_call:
    inputs:
      sc:
        description: 'source-controller image'
        required: true
        type: string
      kc:
        description: 'kustomize-controller image'
        required: true
        type: string
      hc:
        description: 'helm-controller image'
        required: true
        type: string
      nc:
        description: 'notification-controller image'
        required: true
        type: string
      irc:
        description: 'image-reflector-controller image'
        required: true
        type: string
      iac:
        description: 'image-automation-controller image'
        required: true
        type: string
      continue-on-error:
        description: 'continue on error'
        required: false
        type: boolean
        default: true
    secrets:
      pull-token:
        description: 'GitHub Container Registry read-only token'
        required: true

jobs:
  trivy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.pull-token }}
      - name: Scan source-controller
        id: sc
        continue-on-error: ${{ inputs.continue-on-error }}
        uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # v0.16.1
        with:
          image-ref: ${{ inputs.sc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Scan kustomize-controller
        id: kc
        continue-on-error: ${{ inputs.continue-on-error }}
        uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # v0.16.1
        with:
          image-ref: ${{ inputs.kc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Scan helm-controller
        id: hc
        continue-on-error: ${{ inputs.continue-on-error }}
        uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # v0.16.1
        with:
          image-ref: ${{ inputs.hc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Scan notification-controller
        id: nc
        continue-on-error: ${{ inputs.continue-on-error }}
        uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # v0.16.1
        with:
          image-ref: ${{ inputs.nc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Scan image-reflector-controller
        id: irc
        continue-on-error: ${{ inputs.continue-on-error }}
        uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # v0.16.1
        with:
          image-ref: ${{ inputs.irc }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Scan image-automation-controller
        id: iac
        continue-on-error: ${{ inputs.continue-on-error }}
        uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # v0.16.1
        with:
          image-ref: ${{ inputs.iac }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Scan result
        if : steps.sc.outcome == 'failure' || steps.kc.outcome == 'failure' || steps.hc.outcome == 'failure' || steps.nc.outcome == 'failure' || steps.irc.outcome == 'failure' || steps.iac.outcome == 'failure'
        run: |
          echo "One or more controllers have vulnerabilities"
          exit 1
